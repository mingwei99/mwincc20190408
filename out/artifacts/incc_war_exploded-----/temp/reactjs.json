{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"domain": "self.reactjs", "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve got lots of personal and professional experience with vanilla JS and Angular, and I&amp;#39;m trying to learn React and Flux by doing a project.&lt;/p&gt;\n\n&lt;p&gt;Oh, I guess this is really more of a flux question than a react question, but AFAICT this sub also supports flux so... apologies if this is the wrong place.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve uploaded what I&amp;#39;ve got so far to github: &lt;a href=\"https://github.com/Asmor/blades-assistant\"&gt;https://github.com/Asmor/blades-assistant&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;So anyways, to simplify things, I&amp;#39;ve got an array of sets like:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;var sets = [\n    &amp;quot;1001 Nights&amp;quot;,\n    &amp;quot;Anvilicious Arrangements&amp;quot;,\n    &amp;quot;Black Flags, Black Waters&amp;quot;,\n    &amp;quot;Fists of Steel&amp;quot;,\n    &amp;quot;Gno-Mans Land&amp;quot;,\n    &amp;quot;Lightning Bug&amp;quot;,\n    &amp;quot;Obari As Hell: Strike A Pose&amp;quot;,\n    &amp;quot;Rubber Ducky Maid Crusaders R&amp;quot;,\n    &amp;quot;Samurai Mowdown&amp;quot;,\n    &amp;quot;Sunset Striders&amp;quot;,\n    &amp;quot;Super Plumber Bros.&amp;quot;,\n];\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I want to have 5 dropdowns, to select 5 unique sets. Each dropdown would have a blank entry, and that&amp;#39;s the starting value for all 5 of them.&lt;/p&gt;\n\n&lt;p&gt;As soon as you select a set in one dropdown, it should disappear as an option in all other dropdowns. If you change which set is selected, the old set should reappear in the other dropdowns.&lt;/p&gt;\n\n&lt;p&gt;Ok, that&amp;#39;s the basic problem. To make things a little more interesting, there are actually several lists of sets, and for each list of sets there&amp;#39;s a different number of sets I want to be able to pick.&lt;/p&gt;\n\n&lt;p&gt;So here&amp;#39;s how I&amp;#39;m planning to handle this. There are two stores and a component.&lt;/p&gt;\n\n&lt;p&gt;First, there&amp;#39;s &lt;a href=\"https://github.com/Asmor/blades-assistant/blob/master/src/stores/setStore.js\"&gt;SetStore&lt;/a&gt;, which takes all the sets from JSON and separates them by type.&lt;/p&gt;\n\n&lt;p&gt;Second, there&amp;#39;s... a store I haven&amp;#39;t created yet, let&amp;#39;s call ChosenStore. A ChosenStore just keeps track of an arbitrary number of selections; e.g. &lt;code&gt;var chosenExpansionStore = new ChosenStore(5)&lt;/code&gt; would keep track of 5 selections.&lt;/p&gt;\n\n&lt;p&gt;Finally, there&amp;#39;s the component I also haven&amp;#39;t made yet. Let&amp;#39;s call it a SetChooser. A SetChooser would be provided with one of the lists from the SetStore, and an instance of ChosenStore, and from there it would create a number of &lt;a href=\"https://github.com/Asmor/blades-assistant/blob/master/src/components/setDropdown.js\"&gt;SetDropdowns&lt;/a&gt; based on the size of ChosenStore and the component would handle which items should be available in each dropdown.&lt;/p&gt;\n\n&lt;p&gt;And I guess there&amp;#39;s an event handler on each dropdown which would send an action up to the dispatcher (which I haven&amp;#39;t implemented yet) saying that its associated ChosenStore should have a value updated. It occurs to me as I type this up I have no idea how I&amp;#39;d identify which ChosenStore the action is targeting, so I&amp;#39;m thinking that I&amp;#39;m still missing some key concepts about this.&lt;/p&gt;\n\n&lt;p&gt;Anyways, I know this is really long, and thanks for taking the time to read through it and offer any suggestions or criticism you might offer. And if I&amp;#39;m just totally mangling the idea of what a store should be, or how all the different moving parts should connect together... Please tell me.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I've got lots of personal and professional experience with vanilla JS and Angular, and I'm trying to learn React and Flux by doing a project.\n\nOh, I guess this is really more of a flux question than a react question, but AFAICT this sub also supports flux so... apologies if this is the wrong place.\n\nI've uploaded what I've got so far to github: https://github.com/Asmor/blades-assistant\n\nSo anyways, to simplify things, I've got an array of sets like:\n\n\tvar sets = [\n\t\t\"1001 Nights\",\n\t\t\"Anvilicious Arrangements\",\n\t\t\"Black Flags, Black Waters\",\n\t\t\"Fists of Steel\",\n\t\t\"Gno-Mans Land\",\n\t\t\"Lightning Bug\",\n\t\t\"Obari As Hell: Strike A Pose\",\n\t\t\"Rubber Ducky Maid Crusaders R\",\n\t\t\"Samurai Mowdown\",\n\t\t\"Sunset Striders\",\n\t\t\"Super Plumber Bros.\",\n\t];\n\nI want to have 5 dropdowns, to select 5 unique sets. Each dropdown would have a blank entry, and that's the starting value for all 5 of them.\n\nAs soon as you select a set in one dropdown, it should disappear as an option in all other dropdowns. If you change which set is selected, the old set should reappear in the other dropdowns.\n\nOk, that's the basic problem. To make things a little more interesting, there are actually several lists of sets, and for each list of sets there's a different number of sets I want to be able to pick.\n\nSo here's how I'm planning to handle this. There are two stores and a component.\n\nFirst, there's [SetStore](https://github.com/Asmor/blades-assistant/blob/master/src/stores/setStore.js), which takes all the sets from JSON and separates them by type.\n\nSecond, there's... a store I haven't created yet, let's call ChosenStore. A ChosenStore just keeps track of an arbitrary number of selections; e.g. `var chosenExpansionStore = new ChosenStore(5)` would keep track of 5 selections.\n\nFinally, there's the component I also haven't made yet. Let's call it a SetChooser. A SetChooser would be provided with one of the lists from the SetStore, and an instance of ChosenStore, and from there it would create a number of [SetDropdowns](https://github.com/Asmor/blades-assistant/blob/master/src/components/setDropdown.js) based on the size of ChosenStore and the component would handle which items should be available in each dropdown.\n\nAnd I guess there's an event handler on each dropdown which would send an action up to the dispatcher (which I haven't implemented yet) saying that its associated ChosenStore should have a value updated. It occurs to me as I type this up I have no idea how I'd identify which ChosenStore the action is targeting, so I'm thinking that I'm still missing some key concepts about this.\n\nAnyways, I know this is really long, and thanks for taking the time to read through it and offer any suggestions or criticism you might offer. And if I'm just totally mangling the idea of what a store should be, or how all the different moving parts should connect together... Please tell me.", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "4rri1z", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "Asmor", "media": null, "score": 8, "approved_by": null, "over_18": false, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/6u62mEzdHAxbl0NdiidvxE662f4uzDg3_YxVwQItJuo.jpg?s=f546cd3ed52f12ed1b779b6e6fbe5136", "width": 400, "height": 400}, "resolutions": [{"url": "https://i.redditmedia.com/6u62mEzdHAxbl0NdiidvxE662f4uzDg3_YxVwQItJuo.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=109271cadc5b21cb2b92a3f5e3eba2e3", "width": 108, "height": 108}, {"url": "https://i.redditmedia.com/6u62mEzdHAxbl0NdiidvxE662f4uzDg3_YxVwQItJuo.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=5b62ac0fbad569f45d02260b9f95270c", "width": 216, "height": 216}, {"url": "https://i.redditmedia.com/6u62mEzdHAxbl0NdiidvxE662f4uzDg3_YxVwQItJuo.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=628c5cabd5eca95bc4e754967a5fc3a7", "width": 320, "height": 320}], "variants": {}, "id": "tmwcjcw2nmYG1WmnUXs--yq68bmmLcPGF70ieU1MIAY"}]}, "num_comments": 8, "thumbnail": "self", "subreddit_id": "t5_2zldd", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "post_hint": "self", "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/reactjs/comments/4rri1z/reactflux_newbie_question_am_i_thinking_this/", "locked": false, "name": "t3_4rri1z", "created": 1467961659.0, "url": "https://www.reddit.com/r/reactjs/comments/4rri1z/reactflux_newbie_question_am_i_thinking_this/", "author_flair_text": null, "quarantine": false, "title": "React/Flux newbie question; am I thinking this through correctly?", "created_utc": 1467932859.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 8}}, {"kind": "t3", "data": {"domain": "self.reactjs", "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;This is part of the definition of a component I&amp;#39;ve got:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;componentDidMount: function () {\n    this.props.choiceStore.bind(&amp;quot;update&amp;quot;, this.choicesChanged);\n},\nchoicesChanged: function () {\n    this.forceUpdate();\n},\nrandomize: function () {\n    var count = this.props.choiceStore.size();\n    var id = this.props.choiceStore.id();\n    var shuffled = shuffle(this.props.options.map(o =&amp;gt; o.name));\n    var selected = shuffled.slice(0, count).sort();\n\n    selected.forEach(\n        (value, index) =&amp;gt; this.props.dispatcher.dispatch({ action: &amp;quot;choice&amp;quot;, id, index, value })\n    );\n},\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;code&gt;this.randomize()&lt;/code&gt; sends multiple actions to the dispatcher. Each action ends up changing a store, the store emits an &lt;code&gt;update&lt;/code&gt; event, this component watches for that event, and then runs &lt;code&gt;this.forceUpdate()&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;If I throw console.log statements inside &lt;code&gt;choicesChanged&lt;/code&gt; and &lt;code&gt;render&lt;/code&gt;, I can see that &lt;code&gt;choicesChanged&lt;/code&gt; and &lt;code&gt;forceUpdate&lt;/code&gt; are indeed being called multiple times, but &lt;code&gt;render&lt;/code&gt; is only called once after all of the changes have propagated through the system.&lt;/p&gt;\n\n&lt;p&gt;So... how does React know to not call render again every time? Or rather, how does react know when I&amp;#39;m done sending events to the dispatcher? Because this all works exactly how I&amp;#39;d want it to, but I don&amp;#39;t understand what secret voodoo is going on.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "This is part of the definition of a component I've got:\n\n\tcomponentDidMount: function () {\n\t\tthis.props.choiceStore.bind(\"update\", this.choicesChanged);\n\t},\n\tchoicesChanged: function () {\n\t\tthis.forceUpdate();\n\t},\n\trandomize: function () {\n\t\tvar count = this.props.choiceStore.size();\n\t\tvar id = this.props.choiceStore.id();\n\t\tvar shuffled = shuffle(this.props.options.map(o =&gt; o.name));\n\t\tvar selected = shuffled.slice(0, count).sort();\n\n\t\tselected.forEach(\n\t\t\t(value, index) =&gt; this.props.dispatcher.dispatch({ action: \"choice\", id, index, value })\n\t\t);\n\t},\n\n\n`this.randomize()` sends multiple actions to the dispatcher. Each action ends up changing a store, the store emits an `update` event, this component watches for that event, and then runs `this.forceUpdate()`.\n\nIf I throw console.log statements inside `choicesChanged` and `render`, I can see that `choicesChanged` and `forceUpdate` are indeed being called multiple times, but `render` is only called once after all of the changes have propagated through the system.\n\nSo... how does React know to not call render again every time? Or rather, how does react know when I'm done sending events to the dispatcher? Because this all works exactly how I'd want it to, but I don't understand what secret voodoo is going on.", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "4rt651", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "Asmor", "media": null, "score": 1, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 0, "thumbnail": "self", "subreddit_id": "t5_2zldd", "hide_score": true, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/reactjs/comments/4rt651/if_thisforceupdate_is_called_multiple_times/", "locked": false, "name": "t3_4rt651", "created": 1467985229.0, "url": "https://www.reddit.com/r/reactjs/comments/4rt651/if_thisforceupdate_is_called_multiple_times/", "author_flair_text": null, "quarantine": false, "title": "If this.ForceUpdate is called multiple times synchronously, how does React know to only render \"after\"?", "created_utc": 1467956429.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 1}}, {"kind": "t3", "data": {"domain": "self.reactjs", "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I was using material-ui for my react projects. Recently I stumbled on &lt;a href=\"https://github.com/TechnologyAdvice/stardust\"&gt;stardust&lt;/a&gt; and it seems really good. Any one has used stardust and what is your opinion about it?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I was using material-ui for my react projects. Recently I stumbled on [stardust](https://github.com/TechnologyAdvice/stardust) and it seems really good. Any one has used stardust and what is your opinion about it?", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "4rpta0", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "ganessh", "media": null, "score": 7, "approved_by": null, "over_18": false, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/5Yz0ytIx0drhjyHzCLf-nKKBlZn16RZiGvbnQFmdkAA.jpg?s=e56ad755bd361631d23dbdea3f1216ad", "width": 400, "height": 400}, "resolutions": [{"url": "https://i.redditmedia.com/5Yz0ytIx0drhjyHzCLf-nKKBlZn16RZiGvbnQFmdkAA.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=3b0e917c3bec2cf874283a70d6aa250b", "width": 108, "height": 108}, {"url": "https://i.redditmedia.com/5Yz0ytIx0drhjyHzCLf-nKKBlZn16RZiGvbnQFmdkAA.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=06112b5719c67d5eedde7e0e716303f1", "width": 216, "height": 216}, {"url": "https://i.redditmedia.com/5Yz0ytIx0drhjyHzCLf-nKKBlZn16RZiGvbnQFmdkAA.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=354295809bc3c38a54a5e97bee300155", "width": 320, "height": 320}], "variants": {}, "id": "AoGY0Hz-bTkHBMNiNd8yPT_bE4El6HSzWpEXlqZdmOQ"}]}, "num_comments": 5, "thumbnail": "self", "subreddit_id": "t5_2zldd", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "post_hint": "self", "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/reactjs/comments/4rpta0/any_feedback_on_stardust_semantic_ui_for_react/", "locked": false, "name": "t3_4rpta0", "created": 1467941546.0, "url": "https://www.reddit.com/r/reactjs/comments/4rpta0/any_feedback_on_stardust_semantic_ui_for_react/", "author_flair_text": null, "quarantine": false, "title": "Any feedback on stardust (semantic UI for react)", "created_utc": 1467912746.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 7}}, {"kind": "t3", "data": {"domain": "blog.grommet.io", "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "4rrdsm", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "eriksrx", "media": null, "score": 3, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 0, "thumbnail": "default", "subreddit_id": "t5_2zldd", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": false, "from_id": null, "permalink": "/r/reactjs/comments/4rrdsm/an_interview_with_lee_byron_react_developer_at/", "locked": false, "name": "t3_4rrdsm", "created": 1467960151.0, "url": "https://blog.grommet.io/post/2016/06/09/interview-with-lee-byron-react-developer-at-facebook", "author_flair_text": null, "quarantine": false, "title": "An interview with Lee Byron, React developer at facebook", "created_utc": 1467931351.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 3}}, {"kind": "t3", "data": {"domain": "github.com", "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "4rpges", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "mariusandra", "media": null, "score": 7, "approved_by": null, "over_18": false, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/mKecleXJGpAjhyhcsvVrbkUAIM4UxzsRVxA9nxaeOiM.jpg?s=cb9737e6c20e7ad87f6b3175cb66f9c1", "width": 400, "height": 400}, "resolutions": [{"url": "https://i.redditmedia.com/mKecleXJGpAjhyhcsvVrbkUAIM4UxzsRVxA9nxaeOiM.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=323c0ec36c9cc8e7a1a71598c2aae19c", "width": 108, "height": 108}, {"url": "https://i.redditmedia.com/mKecleXJGpAjhyhcsvVrbkUAIM4UxzsRVxA9nxaeOiM.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=ccbcdf7d5321cc71ee58497039d52545", "width": 216, "height": 216}, {"url": "https://i.redditmedia.com/mKecleXJGpAjhyhcsvVrbkUAIM4UxzsRVxA9nxaeOiM.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=bb2ad79f30d90d340e3f4391fac2ba77", "width": 320, "height": 320}], "variants": {}, "id": "fkf6HqinucpXwd0mRpI9FLRZ3uVsGygelBHym_cipyU"}]}, "num_comments": 1, "thumbnail": "http://b.thumbs.redditmedia.com/Go1a0Z8gw-PGVe3umQasuUYUOW9PZP9uE31woBznNHQ.jpg", "subreddit_id": "t5_2zldd", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "post_hint": "link", "stickied": false, "from": null, "is_self": false, "from_id": null, "permalink": "/r/reactjs/comments/4rpges/bring_your_react_data_to_life_with_kealogic/", "locked": false, "name": "t3_4rpges", "created": 1467937589.0, "url": "https://github.com/mariusandra/kea-logic", "author_flair_text": null, "quarantine": false, "title": "Bring your React data to life with kea-logic", "created_utc": 1467908789.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 7}}, {"kind": "t3", "data": {"domain": "remzolotykh.net", "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "4rp79i", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "remzolotykh", "media": null, "score": 5, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 0, "thumbnail": "default", "subreddit_id": "t5_2zldd", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": false, "from_id": null, "permalink": "/r/reactjs/comments/4rp79i/new_free_ongoing_screencast_series_on_developing/", "locked": false, "name": "t3_4rp79i", "created": 1467934735.0, "url": "http://remzolotykh.net/category/react-and-redux", "author_flair_text": null, "quarantine": false, "title": "New free ongoing screencast series on developing app from scratch with React and Redux", "created_utc": 1467905935.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 5}}, {"kind": "t3", "data": {"domain": "self.reactjs", "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi, I have an app with a lot of nested components that make same callback calls and go through a lot of items before they come to the top. Sometimes in the process I get lost with a lot of callbacks...&lt;/p&gt;\n\n&lt;p&gt;How can I avoid this?&lt;/p&gt;\n\n&lt;p&gt;Structure is something like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Details Create Component ( smart component, connected to Redux)\n    Create From Component\n        SomeFormList Component\n            FormList Item ( This nested list item has some button that needs to call some function in Details Create form)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hi, I have an app with a lot of nested components that make same callback calls and go through a lot of items before they come to the top. Sometimes in the process I get lost with a lot of callbacks...\n\nHow can I avoid this?\n\nStructure is something like this:\n\n    Details Create Component ( smart component, connected to Redux)\n        Create From Component\n            SomeFormList Component\n                FormList Item ( This nested list item has some button that needs to call some function in Details Create form)\n", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "4rqew0", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "wedranb", "media": null, "score": 2, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 2, "thumbnail": "self", "subreddit_id": "t5_2zldd", "hide_score": false, "edited": 1467919703.0, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/reactjs/comments/4rqew0/help_reactredux_callback_help/", "locked": false, "name": "t3_4rqew0", "created": 1467948273.0, "url": "https://www.reddit.com/r/reactjs/comments/4rqew0/help_reactredux_callback_help/", "author_flair_text": null, "quarantine": false, "title": "[HELP] React/Redux callback help", "created_utc": 1467919473.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 2}}, {"kind": "t3", "data": {"domain": "self.reactjs", "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I really liked his free React Fundamentals course. Do you think this course is worth the price (245$)? Thanks!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I really liked his free React Fundamentals course. Do you think this course is worth the price (245$)? Thanks!", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "4royy9", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "Shovez", "media": null, "score": 4, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 3, "thumbnail": "self", "subreddit_id": "t5_2zldd", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/reactjs/comments/4royy9/redux_immutablejs_by_tyler_mcginnis_any_reviews/", "locked": false, "name": "t3_4royy9", "created": 1467932163.0, "url": "https://www.reddit.com/r/reactjs/comments/4royy9/redux_immutablejs_by_tyler_mcginnis_any_reviews/", "author_flair_text": null, "quarantine": false, "title": "Redux + ImmutableJS by Tyler McGinnis - Any reviews?", "created_utc": 1467903363.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 4}}, {"kind": "t3", "data": {"domain": "self.reactjs", "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve decided to spend my summer learning React (and React Native). Came up with an idea for mobile app, but first I wanted to create web app to administrate the data for mobile app.\nI&amp;#39;ll be using Firebase for authentication (used just in web app for editing), database and storage - and in future most likely for notifications and other features available.&lt;/p&gt;\n\n&lt;p&gt;At this moment, web app is nearly finished (features for inital phase of the mobile app) but I ran into two issues that I&amp;#39;m unable to solve.\nTheir importance is low but I&amp;#39;d like to solve them:\n1. &lt;strong&gt;Authentication&lt;/strong&gt; - Firebase needs little time (under 500ms I believe) to check if there were any previous sessions and authenticate the user, and while it&amp;#39;s being done - the user is looking at the login screen.\nHowever, if user first reaches a page that does not require authentication, by the time he gets to the page that requires it, he will not see the login screen because because it will be already done - unless he&amp;#39;s visiting the page for the first time.\n2. &lt;strong&gt;Image uploading&lt;/strong&gt; - I created my own component for uploading and displaying the uploading image - but I don&amp;#39;t know how to tell the component to rerender itself after the image upload has been completed - reason why I need to wait for the upload to be finished is to get the download URL of the image.&lt;/p&gt;\n\n&lt;p&gt;Here is a link to the github repo, any ideas?\n&lt;a href=\"https://github.com/mateoKaradza/Crystal-Lexicon\"&gt;https://github.com/mateoKaradza/Crystal-Lexicon&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;And if you have any suggestions/advices, go ahead. :)&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I've decided to spend my summer learning React (and React Native). Came up with an idea for mobile app, but first I wanted to create web app to administrate the data for mobile app.\nI'll be using Firebase for authentication (used just in web app for editing), database and storage - and in future most likely for notifications and other features available.\n\nAt this moment, web app is nearly finished (features for inital phase of the mobile app) but I ran into two issues that I'm unable to solve.\nTheir importance is low but I'd like to solve them:\n1. **Authentication** - Firebase needs little time (under 500ms I believe) to check if there were any previous sessions and authenticate the user, and while it's being done - the user is looking at the login screen.\nHowever, if user first reaches a page that does not require authentication, by the time he gets to the page that requires it, he will not see the login screen because because it will be already done - unless he's visiting the page for the first time.\n2. **Image uploading** - I created my own component for uploading and displaying the uploading image - but I don't know how to tell the component to rerender itself after the image upload has been completed - reason why I need to wait for the upload to be finished is to get the download URL of the image.\n\nHere is a link to the github repo, any ideas?\nhttps://github.com/mateoKaradza/Crystal-Lexicon\n\nAnd if you have any suggestions/advices, go ahead. :)", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "4rpzrm", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "mbalkana", "media": null, "score": 2, "approved_by": null, "over_18": false, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/pnly6DY8I1aYc7TWI2zpVh7WKtbs7URzIQlK-ybWG-w.jpg?s=7834de41dd22c803eeabc7ddd399449f", "width": 420, "height": 420}, "resolutions": [{"url": "https://i.redditmedia.com/pnly6DY8I1aYc7TWI2zpVh7WKtbs7URzIQlK-ybWG-w.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=b3eb5e13721bf5f3576f8253f8cc0d3b", "width": 108, "height": 108}, {"url": "https://i.redditmedia.com/pnly6DY8I1aYc7TWI2zpVh7WKtbs7URzIQlK-ybWG-w.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=7dbeabd6ce1cb3a5ee4d67341c28a82c", "width": 216, "height": 216}, {"url": "https://i.redditmedia.com/pnly6DY8I1aYc7TWI2zpVh7WKtbs7URzIQlK-ybWG-w.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=5627dba6c13cb86bfcd3a701a929b378", "width": 320, "height": 320}], "variants": {}, "id": "-b11O_HB8_j8IGEGBSjrlgmLeELRxZ38wG-SAruBIHk"}]}, "num_comments": 3, "thumbnail": "self", "subreddit_id": "t5_2zldd", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "post_hint": "self", "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/reactjs/comments/4rpzrm/my_first_react_project_little_help_needed/", "locked": false, "name": "t3_4rpzrm", "created": 1467943537.0, "url": "https://www.reddit.com/r/reactjs/comments/4rpzrm/my_first_react_project_little_help_needed/", "author_flair_text": null, "quarantine": false, "title": "My first react project - little help needed", "created_utc": 1467914737.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 2}}, {"kind": "t3", "data": {"domain": "self.reactjs", "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Certainly the middleware would play a role in your decision, but in trying to focus solely on front-end rendering of a webapp (with considerations like browser support [babel?], elegant state management, and most all of your typically-used libraries already &lt;em&gt;npm-installed&lt;/em&gt;, etc.) which &lt;em&gt;blank-slate&lt;/em&gt; do you use and why?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Certainly the middleware would play a role in your decision, but in trying to focus solely on front-end rendering of a webapp (with considerations like browser support [babel?], elegant state management, and most all of your typically-used libraries already *npm-installed*, etc.) which *blank-slate* do you use and why?", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "4rp9f6", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "ArtDealer", "media": null, "score": 3, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 4, "thumbnail": "self", "subreddit_id": "t5_2zldd", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/reactjs/comments/4rp9f6/what_is_your_preferred_starter_project_on_github/", "locked": false, "name": "t3_4rp9f6", "created": 1467935413.0, "url": "https://www.reddit.com/r/reactjs/comments/4rp9f6/what_is_your_preferred_starter_project_on_github/", "author_flair_text": null, "quarantine": false, "title": "What is your preferred 'starter' project on github for a reactJS project?", "created_utc": 1467906613.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 3}}, {"kind": "t3", "data": {"domain": "self.reactjs", "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I just read a cool thread about redux here, lots of good comments. I now understand more about Redux everyday, and it sounds great.&lt;/p&gt;\n\n&lt;p&gt;The way I use Redux with React is with the use of the connect &amp;quot;mapDispatchToProps&amp;quot; function which maps functions like, let&amp;#39;s say,  &amp;quot;fetchMessage&amp;quot; which will fetch some data to the props of my component, so if i call &amp;quot;this.props.fetchMessage()&amp;quot; the dispatch call is actually not hard-coded into the component object itself. That does make a lot of sens to me, but there is very picky exception : those &amp;quot;fetchMessage&amp;quot; actions are &lt;em&gt;actions&lt;/em&gt; and not &lt;em&gt;properties&lt;/em&gt; per say, so it feels un-natural to me to call &amp;quot;this.&lt;strong&gt;props&lt;/strong&gt;.fetchMessage()&amp;quot;&lt;/p&gt;\n\n&lt;p&gt;As Redux embeds my component into a wrapper when calling its &amp;quot;connect&amp;quot; function, why not mapping dispatch to component over a &amp;quot;actions&amp;quot; properties of my component ?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I just read a cool thread about redux here, lots of good comments. I now understand more about Redux everyday, and it sounds great.\n\nThe way I use Redux with React is with the use of the connect \"mapDispatchToProps\" function which maps functions like, let's say,  \"fetchMessage\" which will fetch some data to the props of my component, so if i call \"this.props.fetchMessage()\" the dispatch call is actually not hard-coded into the component object itself. That does make a lot of sens to me, but there is very picky exception : those \"fetchMessage\" actions are *actions* and not *properties* per say, so it feels un-natural to me to call \"this.**props**.fetchMessage()\"\n\nAs Redux embeds my component into a wrapper when calling its \"connect\" function, why not mapping dispatch to component over a \"actions\" properties of my component ?", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "4rnkqh", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "y_nk", "media": null, "score": 6, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 9, "thumbnail": "self", "subreddit_id": "t5_2zldd", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/reactjs/comments/4rnkqh/redux_dispatchs/", "locked": false, "name": "t3_4rnkqh", "created": 1467910371.0, "url": "https://www.reddit.com/r/reactjs/comments/4rnkqh/redux_dispatchs/", "author_flair_text": null, "quarantine": false, "title": "Redux dispatchs", "created_utc": 1467881571.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 6}}, {"kind": "t3", "data": {"domain": "self.reactjs", "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;My app has the state on one big object at the root. In this object are components, subcomponents, compositions within subcomponents, and sometimes items within those too. &lt;/p&gt;\n\n&lt;p&gt;From what I&amp;#39;ve read the best practice to call a method in from the app root, whilst in a child component, is to pass these methods down as props. This works fine but gets pretty messy quickly as I have to pass each function down the whole tree to the component I want (and there&amp;#39;s going to be a lot of them!)&lt;/p&gt;\n\n&lt;p&gt;I thought instead of doing this, is there a way to set the child component state to be a part of the parent state (i.e. an object within the root state)? When the child&amp;#39;s state is updated it would then automatically update the root state.&lt;/p&gt;\n\n&lt;p&gt;Alternately if there is an easier way to call a method from the root from the context of a child it would also work. Or if I could access the root state directly from the child...?&lt;/p&gt;\n\n&lt;p&gt;Very new to react, I&amp;#39;ve probably missed something obvious. Hope this makes sense, appreciate any advice :)&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "My app has the state on one big object at the root. In this object are components, subcomponents, compositions within subcomponents, and sometimes items within those too. \n\nFrom what I've read the best practice to call a method in from the app root, whilst in a child component, is to pass these methods down as props. This works fine but gets pretty messy quickly as I have to pass each function down the whole tree to the component I want (and there's going to be a lot of them!)\n\nI thought instead of doing this, is there a way to set the child component state to be a part of the parent state (i.e. an object within the root state)? When the child's state is updated it would then automatically update the root state.\n\nAlternately if there is an easier way to call a method from the root from the context of a child it would also work. Or if I could access the root state directly from the child...?\n\nVery new to react, I've probably missed something obvious. Hope this makes sense, appreciate any advice :)", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "4rohda", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "no-one_ever", "media": null, "score": 1, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 7, "thumbnail": "self", "subreddit_id": "t5_2zldd", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/reactjs/comments/4rohda/set_child_state_as_part_of_parent_state_or_easier/", "locked": false, "name": "t3_4rohda", "created": 1467926064.0, "url": "https://www.reddit.com/r/reactjs/comments/4rohda/set_child_state_as_part_of_parent_state_or_easier/", "author_flair_text": null, "quarantine": false, "title": "Set child state as part of parent state? Or easier way to call parent method without using props?", "created_utc": 1467897264.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 1}}, {"kind": "t3", "data": {"domain": "daveceddia.com", "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "4ri9x8", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "simcptr", "media": null, "score": 50, "approved_by": null, "over_18": false, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/H4Asq17fS141_DY51oLZfveERh2k4uj53kGRC1sOcVo.jpg?s=a8a6faaa341ac3f1a0163aa92b4757b3", "width": 300, "height": 300}, "resolutions": [{"url": "https://i.redditmedia.com/H4Asq17fS141_DY51oLZfveERh2k4uj53kGRC1sOcVo.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=e9197f506fea73e2e56ab80236ea1cef", "width": 108, "height": 108}, {"url": "https://i.redditmedia.com/H4Asq17fS141_DY51oLZfveERh2k4uj53kGRC1sOcVo.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=634d4dee4ccf37129639009282ccfed4", "width": 216, "height": 216}], "variants": {}, "id": "CRxMSMjMdTzjZyQQleTd-gzj6XQ-DYTpzU4EYEqV_K4"}]}, "num_comments": 36, "thumbnail": "http://b.thumbs.redditmedia.com/fzkn1v-5fo1LRnOmJTt66OK5-8XR0F1sSda_oPm4xug.jpg", "subreddit_id": "t5_2zldd", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "post_hint": "link", "stickied": false, "from": null, "is_self": false, "from_id": null, "permalink": "/r/reactjs/comments/4ri9x8/dont_use_bind_when_passing_props/", "locked": false, "name": "t3_4ri9x8", "created": 1467837635.0, "url": "https://daveceddia.com/avoid-bind-when-passing-props/", "author_flair_text": null, "quarantine": false, "title": "Don't Use Bind When Passing Props", "created_utc": 1467808835.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 50}}, {"kind": "t3", "data": {"domain": "self.reactjs", "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I have been following a tutorial on youtube on react, so far so good but I cannot get the code from lesson 7 to render and I am struggling to find a cause behind the error messages.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://jsbin.com/ritirodepa/edit?html,js,output\"&gt;Code is here&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.youtube.com/watch?v=5tT8FXeE1Y8\"&gt;Tutorial for reference&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Any help please and thank you!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I have been following a tutorial on youtube on react, so far so good but I cannot get the code from lesson 7 to render and I am struggling to find a cause behind the error messages.\n\n[Code is here](https://jsbin.com/ritirodepa/edit?html,js,output)\n\n[Tutorial for reference](https://www.youtube.com/watch?v=5tT8FXeE1Y8)\n\nAny help please and thank you!", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "4rngoe", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "captain_awesome101", "media": null, "score": 1, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 2, "thumbnail": "self", "subreddit_id": "t5_2zldd", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/reactjs/comments/4rngoe/cannot_get_component_to_render/", "locked": false, "name": "t3_4rngoe", "created": 1467908006.0, "url": "https://www.reddit.com/r/reactjs/comments/4rngoe/cannot_get_component_to_render/", "author_flair_text": null, "quarantine": false, "title": "Cannot get component to render.", "created_utc": 1467879206.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 1}}, {"kind": "t3", "data": {"domain": "github.com", "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "4rnfyz", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "bsthomsen", "media": null, "score": 1, "approved_by": null, "over_18": false, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/d34G6nbpSDkf1h0NTi1tdAqu5-J04jWLPCIcB-IQlJw.jpg?s=399546729a5e6d5ecac4038a7215a5dd", "width": 400, "height": 400}, "resolutions": [{"url": "https://i.redditmedia.com/d34G6nbpSDkf1h0NTi1tdAqu5-J04jWLPCIcB-IQlJw.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=d1c3e3b346863f18ff59c4f867a635e7", "width": 108, "height": 108}, {"url": "https://i.redditmedia.com/d34G6nbpSDkf1h0NTi1tdAqu5-J04jWLPCIcB-IQlJw.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=776bfc924d06021be38b518f58820232", "width": 216, "height": 216}, {"url": "https://i.redditmedia.com/d34G6nbpSDkf1h0NTi1tdAqu5-J04jWLPCIcB-IQlJw.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=8dba45fd2897c9c0c1c2e39dcc7dcaaf", "width": 320, "height": 320}], "variants": {}, "id": "ZGw3nxV-2mS93o4Av12lomiozZAsC7XD-WCadOXRs8I"}]}, "num_comments": 0, "thumbnail": "http://a.thumbs.redditmedia.com/PHd6cBJFXlsoDsL0KLjNNnve3DlO3ek1WyoL_W0qJH8.jpg", "subreddit_id": "t5_2zldd", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "post_hint": "link", "stickied": false, "from": null, "is_self": false, "from_id": null, "permalink": "/r/reactjs/comments/4rnfyz/ive_started_developing_a_swiper_react_component/", "locked": false, "name": "t3_4rnfyz", "created": 1467907588.0, "url": "https://github.com/bsthomsen/react-swiper", "author_flair_text": null, "quarantine": false, "title": "I've started developing a swiper react component, help me out!", "created_utc": 1467878788.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 1}}, {"kind": "t3", "data": {"domain": "github.com", "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "4rn6am", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "jasan-s", "media": null, "score": 1, "approved_by": null, "over_18": false, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/Q9xlin8973SDabUDjW5RUylANRqqTMT_WW8qcIzU3Jw.jpg?s=eceda1e813d65be9d34c331fa38ef2cf", "width": 400, "height": 400}, "resolutions": [{"url": "https://i.redditmedia.com/Q9xlin8973SDabUDjW5RUylANRqqTMT_WW8qcIzU3Jw.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=e949495a33cdd113e03e27964bd14865", "width": 108, "height": 108}, {"url": "https://i.redditmedia.com/Q9xlin8973SDabUDjW5RUylANRqqTMT_WW8qcIzU3Jw.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=a2f62ebb7c1eecad93c8ee645f439801", "width": 216, "height": 216}, {"url": "https://i.redditmedia.com/Q9xlin8973SDabUDjW5RUylANRqqTMT_WW8qcIzU3Jw.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=e94fd49bfce5ed54716fdfd59c48fb2d", "width": 320, "height": 320}], "variants": {}, "id": "0hoHJxbN2a7ZTgLMqaqYOX3JMkNfsQ0ybKpyN11CGBk"}]}, "num_comments": 0, "thumbnail": "http://a.thumbs.redditmedia.com/pMX-kOLaDLralP7fWEjRxJEN8U-AUXd1CeYIRRXOR54.jpg", "subreddit_id": "t5_2zldd", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "post_hint": "link", "stickied": false, "from": null, "is_self": false, "from_id": null, "permalink": "/r/reactjs/comments/4rn6am/universal_react_pwa_boilerplate/", "locked": false, "name": "t3_4rn6am", "created": 1467902110.0, "url": "https://github.com/localnerve/react-pwa-reference", "author_flair_text": null, "quarantine": false, "title": "Universal React PWA boilerplate", "created_utc": 1467873310.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 1}}, {"kind": "t3", "data": {"domain": "medium.com", "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "4rip7l", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "popemaster", "media": null, "score": 10, "approved_by": null, "over_18": false, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/LtEWvnGKrzBtE-x4Uj4qTWfWH1BhAiYmbmNvFBUFou0.jpg?s=60fe49cc010947304090c806a8c4d2ce", "width": 1200, "height": 1047}, "resolutions": [{"url": "https://i.redditmedia.com/LtEWvnGKrzBtE-x4Uj4qTWfWH1BhAiYmbmNvFBUFou0.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=ccede333eeb25c85f018b88699fce939", "width": 108, "height": 94}, {"url": "https://i.redditmedia.com/LtEWvnGKrzBtE-x4Uj4qTWfWH1BhAiYmbmNvFBUFou0.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=0194cb17fd5baade76ccc319b0de973a", "width": 216, "height": 188}, {"url": "https://i.redditmedia.com/LtEWvnGKrzBtE-x4Uj4qTWfWH1BhAiYmbmNvFBUFou0.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=0a31dae33ca8b52564d96b4ee96ddedb", "width": 320, "height": 279}, {"url": "https://i.redditmedia.com/LtEWvnGKrzBtE-x4Uj4qTWfWH1BhAiYmbmNvFBUFou0.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=640&amp;s=b515f1360e5a2efbbea0a0e05c943597", "width": 640, "height": 558}, {"url": "https://i.redditmedia.com/LtEWvnGKrzBtE-x4Uj4qTWfWH1BhAiYmbmNvFBUFou0.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=960&amp;s=3132c7908259b1746cb0ed621a29e428", "width": 960, "height": 837}, {"url": "https://i.redditmedia.com/LtEWvnGKrzBtE-x4Uj4qTWfWH1BhAiYmbmNvFBUFou0.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=1080&amp;s=3d6820e3aff4132b717feb871926dd44", "width": 1080, "height": 942}], "variants": {}, "id": "SJ59XbJSNP9wtlogMNTAYhwPtsJElHMm66aL6SA-8Ic"}]}, "num_comments": 0, "thumbnail": "http://b.thumbs.redditmedia.com/-3UqeTAOnzKK5jV4ED3Zp0UU7l6OWk-1A-ae3o1M5SI.jpg", "subreddit_id": "t5_2zldd", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "post_hint": "link", "stickied": false, "from": null, "is_self": false, "from_id": null, "permalink": "/r/reactjs/comments/4rip7l/react_and_flux_in_production_best_practices/", "locked": false, "name": "t3_4rip7l", "created": 1467843755.0, "url": "https://medium.com/@delveeng/react-and-flux-in-production-best-practices-c87766c57cb6#.t07kca5wx", "author_flair_text": null, "quarantine": false, "title": "React and Flux in Production Best Practices", "created_utc": 1467814955.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 10}}, {"kind": "t3", "data": {"domain": "imgur.com", "banned_by": null, "media_embed": {"content": "&lt;iframe class=\"embedly-embed\" src=\"//cdn.embedly.com/widgets/media.html?src=%2F%2Fimgur.com%2Fa%2FzZydi%2Fembed&amp;url=http%3A%2F%2Fimgur.com%2Fa%2FzZydi&amp;image=http%3A%2F%2Fi.imgur.com%2FRBiZLGb.jpg%3Ffb&amp;key=2aa3c4d5f3de4f5b9120b660ad850dc9&amp;type=text%2Fhtml&amp;schema=imgur\" width=\"550\" height=\"550\" scrolling=\"no\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 550, "scrolling": false, "height": 550}, "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": {"type": "imgur.com", "oembed": {"provider_url": "http://imgur.com", "description": "Imgur: The most awesome images on the Internet.", "title": "atom-ternjs", "thumbnail_width": 600, "height": 550, "width": 550, "html": "&lt;iframe class=\"embedly-embed\" src=\"https://cdn.embedly.com/widgets/media.html?src=%2F%2Fimgur.com%2Fa%2FzZydi%2Fembed&amp;url=http%3A%2F%2Fimgur.com%2Fa%2FzZydi&amp;image=http%3A%2F%2Fi.imgur.com%2FRBiZLGb.jpg%3Ffb&amp;key=2aa3c4d5f3de4f5b9120b660ad850dc9&amp;type=text%2Fhtml&amp;schema=imgur\" width=\"550\" height=\"550\" scrolling=\"no\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;", "version": "1.0", "provider_name": "Imgur", "thumbnail_url": "https://i.embed.ly/1/image?url=http%3A%2F%2Fi.imgur.com%2FRBiZLGb.jpg%3Ffb&amp;key=b1e305db91cf4aa5a86b732cc9fffceb", "type": "rich", "thumbnail_height": 315}}, "link_flair_text": null, "id": "4riy1g", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "cmaart", "media": {"type": "imgur.com", "oembed": {"provider_url": "http://imgur.com", "description": "Imgur: The most awesome images on the Internet.", "title": "atom-ternjs", "thumbnail_width": 600, "height": 550, "width": 550, "html": "&lt;iframe class=\"embedly-embed\" src=\"//cdn.embedly.com/widgets/media.html?src=%2F%2Fimgur.com%2Fa%2FzZydi%2Fembed&amp;url=http%3A%2F%2Fimgur.com%2Fa%2FzZydi&amp;image=http%3A%2F%2Fi.imgur.com%2FRBiZLGb.jpg%3Ffb&amp;key=2aa3c4d5f3de4f5b9120b660ad850dc9&amp;type=text%2Fhtml&amp;schema=imgur\" width=\"550\" height=\"550\" scrolling=\"no\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;", "version": "1.0", "provider_name": "Imgur", "thumbnail_url": "http://i.imgur.com/RBiZLGb.jpg?fb", "type": "rich", "thumbnail_height": 315}}, "score": 10, "approved_by": null, "over_18": false, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/_g10SdyCu_OXG8_yVA06nVrAQUcoiacXgRJ5NyuP9LY.jpg?s=2c074dc4c60a4fb3404daed2cff17508", "width": 1255, "height": 1040}, "resolutions": [{"url": "https://i.redditmedia.com/_g10SdyCu_OXG8_yVA06nVrAQUcoiacXgRJ5NyuP9LY.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=b1a33331294532d6daa2e0bfc0760175", "width": 108, "height": 89}, {"url": "https://i.redditmedia.com/_g10SdyCu_OXG8_yVA06nVrAQUcoiacXgRJ5NyuP9LY.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=c9b725d7a3f7ede44bbb9389b060b413", "width": 216, "height": 178}, {"url": "https://i.redditmedia.com/_g10SdyCu_OXG8_yVA06nVrAQUcoiacXgRJ5NyuP9LY.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=a31d3d42a2da1af5b89f0e2b9ff91b31", "width": 320, "height": 265}, {"url": "https://i.redditmedia.com/_g10SdyCu_OXG8_yVA06nVrAQUcoiacXgRJ5NyuP9LY.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=640&amp;s=c9961280344c5e43fb86064f5024f793", "width": 640, "height": 530}, {"url": "https://i.redditmedia.com/_g10SdyCu_OXG8_yVA06nVrAQUcoiacXgRJ5NyuP9LY.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=960&amp;s=f6f00e58abc76646c42fc5219a67157f", "width": 960, "height": 795}, {"url": "https://i.redditmedia.com/_g10SdyCu_OXG8_yVA06nVrAQUcoiacXgRJ5NyuP9LY.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=1080&amp;s=7c50ed65089e3f82104676174709be69", "width": 1080, "height": 894}], "variants": {}, "id": "Y2awazANexXla85mKLad9_959hlYSf8mFweCoOhI0nk"}]}, "num_comments": 13, "thumbnail": "http://a.thumbs.redditmedia.com/GAbQBc5uYzwSaFsTElBO5Hj8OPJB5Yhi9jp6Cx_Tg10.jpg", "subreddit_id": "t5_2zldd", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {"content": "&lt;iframe class=\"embedly-embed\" src=\"https://cdn.embedly.com/widgets/media.html?src=%2F%2Fimgur.com%2Fa%2FzZydi%2Fembed&amp;url=http%3A%2F%2Fimgur.com%2Fa%2FzZydi&amp;image=http%3A%2F%2Fi.imgur.com%2FRBiZLGb.jpg%3Ffb&amp;key=2aa3c4d5f3de4f5b9120b660ad850dc9&amp;type=text%2Fhtml&amp;schema=imgur\" width=\"550\" height=\"550\" scrolling=\"no\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 550, "scrolling": false, "height": 550}, "saved": false, "removal_reason": null, "post_hint": "link", "stickied": false, "from": null, "is_self": false, "from_id": null, "permalink": "/r/reactjs/comments/4riy1g/shoutout_to_atomternjs_package_basically_gives/", "locked": false, "name": "t3_4riy1g", "created": 1467846810.0, "url": "http://imgur.com/a/zZydi", "author_flair_text": null, "quarantine": false, "title": "Shoutout to atom-ternjs package - Basically gives you magic autocomplete in atom", "created_utc": 1467818010.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 10}}, {"kind": "t3", "data": {"domain": "self.reactjs", "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I am currently developing a reusable component/package. My state tree is becoming quite complex and looking to see if I should simply the package by adding redux or an alt flux lib as a dependency. While I want to integrate redux into the module as it improves the code structure and readability, it adds one more dependency in the package.&lt;/p&gt;\n\n&lt;p&gt;What are your thoughts? &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I am currently developing a reusable component/package. My state tree is becoming quite complex and looking to see if I should simply the package by adding redux or an alt flux lib as a dependency. While I want to integrate redux into the module as it improves the code structure and readability, it adds one more dependency in the package.\n\nWhat are your thoughts? ", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "4rlces", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "kobel4k3r5", "media": null, "score": 2, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 1, "thumbnail": "self", "subreddit_id": "t5_2zldd", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/reactjs/comments/4rlces/should_i_use_redux_or_an_alt_flux_lib_for_a/", "locked": false, "name": "t3_4rlces", "created": 1467875469.0, "url": "https://www.reddit.com/r/reactjs/comments/4rlces/should_i_use_redux_or_an_alt_flux_lib_for_a/", "author_flair_text": null, "quarantine": false, "title": "Should I use Redux or an alt Flux lib for a reusable package?", "created_utc": 1467846669.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 2}}, {"kind": "t3", "data": {"domain": "self.reactjs", "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m going on a trip for a month and figured it would be a good time to ingest a few books. However I&amp;#39;m finding it hard to determine which books are legitimate.&lt;/p&gt;\n\n&lt;p&gt;I know the basics of React, but would like to learn a bit more about architecture best practices.&lt;/p&gt;\n\n&lt;p&gt;Some things I&amp;#39;d like to learn more about (not in any particular order)&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Architecture concepts for medium to large applications&lt;/li&gt;\n&lt;li&gt;Unit Testing&lt;/li&gt;\n&lt;li&gt;Feature Flags&lt;/li&gt;\n&lt;li&gt;Advanced Routing&lt;/li&gt;\n&lt;li&gt;Advanced Webpack Shenanigans&lt;/li&gt;\n&lt;li&gt;Anything I don&amp;#39;t yet realize that I should know :P&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I'm going on a trip for a month and figured it would be a good time to ingest a few books. However I'm finding it hard to determine which books are legitimate.\n\nI know the basics of React, but would like to learn a bit more about architecture best practices.\n\nSome things I'd like to learn more about (not in any particular order)\n\n- Architecture concepts for medium to large applications\n- Unit Testing\n- Feature Flags\n- Advanced Routing\n- Advanced Webpack Shenanigans\n- Anything I don't yet realize that I should know :P", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "4rizuu", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "xmashamm", "media": null, "score": 5, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 4, "thumbnail": "self", "subreddit_id": "t5_2zldd", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/reactjs/comments/4rizuu/any_book_recommendations/", "locked": false, "name": "t3_4rizuu", "created": 1467847437.0, "url": "https://www.reddit.com/r/reactjs/comments/4rizuu/any_book_recommendations/", "author_flair_text": null, "quarantine": false, "title": "Any book recommendations?", "created_utc": 1467818637.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 5}}, {"kind": "t3", "data": {"domain": "self.reactjs", "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;So I&amp;#39;m a front end dev that&amp;#39;s been playing around with react-redux with webpack and babel. I&amp;#39;ve finally got my app working how I want it and I&amp;#39;m using json-server as a mock api to get my data from.&lt;/p&gt;\n\n&lt;p&gt;I barely know any backend stuff, but I&amp;#39;m good at figuring things out if someone points me in the right direction. &lt;/p&gt;\n\n&lt;p&gt;So where do I go now if I want to make my app work online, and where should I go to turn my mock api into a real one? &lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve only ever just uploaded my sites to my FTP and used 3rd party if I&amp;#39;m using data, so this is a little different for me.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "So I'm a front end dev that's been playing around with react-redux with webpack and babel. I've finally got my app working how I want it and I'm using json-server as a mock api to get my data from.\n\nI barely know any backend stuff, but I'm good at figuring things out if someone points me in the right direction. \n\nSo where do I go now if I want to make my app work online, and where should I go to turn my mock api into a real one? \n\nI've only ever just uploaded my sites to my FTP and used 3rd party if I'm using data, so this is a little different for me.", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "4rk47u", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "Kits_87", "media": null, "score": 1, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 8, "thumbnail": "self", "subreddit_id": "t5_2zldd", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/reactjs/comments/4rk47u/how_do_i_start_preparing_a_reactredux_app_for/", "locked": false, "name": "t3_4rk47u", "created": 1467860107.0, "url": "https://www.reddit.com/r/reactjs/comments/4rk47u/how_do_i_start_preparing_a_reactredux_app_for/", "author_flair_text": null, "quarantine": false, "title": "How do I start preparing a react-redux app for production and getting a real RESTful API set up?", "created_utc": 1467831307.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 1}}, {"kind": "t3", "data": {"domain": "self.reactjs", "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Apologies if this is a dumb question, say I have a component called &amp;#39;Foo&amp;#39; and another component called &amp;#39;FooList&amp;#39; which basically displays lists of Foos. I have an array of objects from which I want to create my Foos, should I be laying out the Foos myself or passing the array to FooList as a prop for it to lay them out. Example:&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Laying them out&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;var array = [\n  {foo: foo, bar: bar},\n  {foo:baz, bar: qux}\n];\n\nvar App = React.createClass({\n  render: function() {\n    &amp;lt;FooList&amp;gt;\n      {\n        array.map(function(item) {return &amp;lt;Foo data={item} /&amp;gt;})\n      }\n    &amp;lt;/FooList&amp;gt;\n  }\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;em&gt;The render method of FooList would use something like:&lt;/em&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;this.props.children\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Passing them in&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;var array = [\n  {foo: foo, bar: bar},\n  {foo:baz, bar: qux}\n];\n\nvar App = React.createClass({\n  render: function() {\n    &amp;lt;FooList foos={array} /&amp;gt;\n  }\n});\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;em&gt;The render method of FooList would use something like:&lt;/em&gt; &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;this.props.foos.map(function(item) {return &amp;lt;Foo data={item} /&amp;gt;})\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In which circumstances is each suitable, if at all or is it a matter of preference?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Apologies if this is a dumb question, say I have a component called 'Foo' and another component called 'FooList' which basically displays lists of Foos. I have an array of objects from which I want to create my Foos, should I be laying out the Foos myself or passing the array to FooList as a prop for it to lay them out. Example:\n\n**Laying them out**\n\n    var array = [\n      {foo: foo, bar: bar},\n      {foo:baz, bar: qux}\n    ];\n\n    var App = React.createClass({\n      render: function() {\n        &lt;FooList&gt;\n          {\n            array.map(function(item) {return &lt;Foo data={item} /&gt;})\n          }\n        &lt;/FooList&gt;\n      }\n    });\n\n*The render method of FooList would use something like:*\n\n    this.props.children\n\n**Passing them in**\n\n    var array = [\n      {foo: foo, bar: bar},\n      {foo:baz, bar: qux}\n    ];\n\n    var App = React.createClass({\n      render: function() {\n        &lt;FooList foos={array} /&gt;\n      }\n    });\n\n*The render method of FooList would use something like:* \n\n    this.props.foos.map(function(item) {return &lt;Foo data={item} /&gt;})\n\nIn which circumstances is each suitable, if at all or is it a matter of preference?", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "4rjuve", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "TG__", "media": null, "score": 1, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 3, "thumbnail": "self", "subreddit_id": "t5_2zldd", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/reactjs/comments/4rjuve/laying_out_children_vs_passing_them_in/", "locked": false, "name": "t3_4rjuve", "created": 1467857083.0, "url": "https://www.reddit.com/r/reactjs/comments/4rjuve/laying_out_children_vs_passing_them_in/", "author_flair_text": null, "quarantine": false, "title": "Laying out children vs passing them in", "created_utc": 1467828283.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 1}}, {"kind": "t3", "data": {"domain": "medium.com", "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "4rdn61", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "jgldev", "media": null, "score": 50, "approved_by": null, "over_18": false, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/titTlJvsnUuz-HceU1qDNgF8lF8VAZGEmv6a9CJ2zBQ.jpg?s=be26ef3c61a81bc40af0067dd40b08c9", "width": 60, "height": 60}, "resolutions": [], "variants": {}, "id": "xJ14-BNAXGkyOaudnMWGJ4gtZ1fILYIvFJ0QfkTD2xI"}]}, "num_comments": 9, "thumbnail": "http://b.thumbs.redditmedia.com/5NRliTFMyoGku4CssdiBaTcMilwox7T9GutPMhprhis.jpg", "subreddit_id": "t5_2zldd", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "post_hint": "link", "stickied": false, "from": null, "is_self": false, "from_id": null, "permalink": "/r/reactjs/comments/4rdn61/asking_good_questions/", "locked": false, "name": "t3_4rdn61", "created": 1467766370.0, "url": "https://medium.com/@dan_abramov/asking-good-questions-421f08ee7e5c#.9169xbp0z", "author_flair_text": null, "quarantine": false, "title": "Asking good questions", "created_utc": 1467737570.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 50}}, {"kind": "t3", "data": {"domain": "self.reactjs", "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m learning react and trying to create simple blog using wordpress api. I have main component that renders also Nav component with menu. There is a link (I&amp;#39;m using react-router) to Blog component. Blog component renders list of post titles. When you click on a post title it loads Post component with content of a post. It works but I don&amp;#39;t know how to do one thing. &lt;/p&gt;\n\n&lt;p&gt;Post component is child of a Blog component so when app renders post it doesn&amp;#39;t remove Blog component (I&amp;#39;m just changing state of Blog component to change style of a list of posts when certain Post is rendered) My problem is that when I click on a link to Blog component in a menu (while Post is rendered) and app removes Post component - the state of a Blog remains the same. So list of posts is styled exactly the same as it was when post was rendered. &lt;/p&gt;\n\n&lt;p&gt;I would like  that clicking on a link in navigation resets state of a Blog component. What is the best way to do this?&lt;/p&gt;\n\n&lt;p&gt;I tried to create a function in my main component that will rule state of that, pass that function to Nav component (so clicking in Nav will change the state of main component), and pass that state to Blog component (so it will know that link in Nav was clicked).&lt;/p&gt;\n\n&lt;p&gt;The problem is that I don&amp;#39;t know how to pass that state to Blog component because it&amp;#39;s rendered via router. &lt;/p&gt;\n\n&lt;p&gt;So should I use redux for such things? &lt;/p&gt;\n\n&lt;p&gt;Sorry for my english, long post and - probably - mistakes in terminology. &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I'm learning react and trying to create simple blog using wordpress api. I have main component that renders also Nav component with menu. There is a link (I'm using react-router) to Blog component. Blog component renders list of post titles. When you click on a post title it loads Post component with content of a post. It works but I don't know how to do one thing. \n\n\nPost component is child of a Blog component so when app renders post it doesn't remove Blog component (I'm just changing state of Blog component to change style of a list of posts when certain Post is rendered) My problem is that when I click on a link to Blog component in a menu (while Post is rendered) and app removes Post component - the state of a Blog remains the same. So list of posts is styled exactly the same as it was when post was rendered. \n\n\nI would like  that clicking on a link in navigation resets state of a Blog component. What is the best way to do this?\n\n\nI tried to create a function in my main component that will rule state of that, pass that function to Nav component (so clicking in Nav will change the state of main component), and pass that state to Blog component (so it will know that link in Nav was clicked).\n\n\nThe problem is that I don't know how to pass that state to Blog component because it's rendered via router. \n\n\nSo should I use redux for such things? \n\n\nSorry for my english, long post and - probably - mistakes in terminology. ", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "4ri7l5", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "filipoi", "media": null, "score": 1, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 1, "thumbnail": "self", "subreddit_id": "t5_2zldd", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/reactjs/comments/4ri7l5/begginer_problem_how_to_pass_data_to_sibling/", "locked": false, "name": "t3_4ri7l5", "created": 1467836470.0, "url": "https://www.reddit.com/r/reactjs/comments/4ri7l5/begginer_problem_how_to_pass_data_to_sibling/", "author_flair_text": null, "quarantine": false, "title": "Begginer problem: how to Pass data to Sibling components using React-router", "created_utc": 1467807670.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 1}}, {"kind": "t3", "data": {"domain": "self.reactjs", "banned_by": null, "media_embed": {}, "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m getting acquainted with React without webpack, flux, redux etc... (for now), just using the raw js files. &lt;/p&gt;\n\n&lt;p&gt;I want to update part of an object within the state without recreating the whole object again. Supposedly the &amp;#39;react-with-addons.js&amp;#39; &lt;a href=\"https://facebook.github.io/react/docs/addons.html\"&gt;file&lt;/a&gt; you can download has the &amp;#39;update&amp;#39; function which should accommodate this, but when I try and call it console says it&amp;#39;s undefined. I checked the file itself, and sure enough the function is there. What gives?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I'm getting acquainted with React without webpack, flux, redux etc... (for now), just using the raw js files. \n\nI want to update part of an object within the state without recreating the whole object again. Supposedly the 'react-with-addons.js' [file](https://facebook.github.io/react/docs/addons.html) you can download has the 'update' function which should accommodate this, but when I try and call it console says it's undefined. I checked the file itself, and sure enough the function is there. What gives?", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "4ri58t", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "no-one_ever", "media": null, "score": 1, "approved_by": null, "over_18": false, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/-CfDEf2LPRvQz8WpCmiDNh9pIphAwmgmvYl6q_tXI0c.jpg?s=79001baa363348139b8014e87835411c", "width": 400, "height": 400}, "resolutions": [{"url": "https://i.redditmedia.com/-CfDEf2LPRvQz8WpCmiDNh9pIphAwmgmvYl6q_tXI0c.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=a29921fcad4a0acd4a09628232957d6b", "width": 108, "height": 108}, {"url": "https://i.redditmedia.com/-CfDEf2LPRvQz8WpCmiDNh9pIphAwmgmvYl6q_tXI0c.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=e2d015629c7402c3b0a33e86ffb49d37", "width": 216, "height": 216}, {"url": "https://i.redditmedia.com/-CfDEf2LPRvQz8WpCmiDNh9pIphAwmgmvYl6q_tXI0c.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=7e4f73c6faac946709e12fc30e99566f", "width": 320, "height": 320}], "variants": {}, "id": "6XM_Xwa3hfjHWMPZZegSsXALBMAX1aE6stuwn7eA_bQ"}]}, "num_comments": 4, "thumbnail": "self", "subreddit_id": "t5_2zldd", "hide_score": false, "edited": 1467806767.0, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "post_hint": "self", "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/reactjs/comments/4ri58t/reactwithaddonsjs_function_update_not_defined/", "locked": false, "name": "t3_4ri58t", "created": 1467835333.0, "url": "https://www.reddit.com/r/reactjs/comments/4ri58t/reactwithaddonsjs_function_update_not_defined/", "author_flair_text": null, "quarantine": false, "title": "react-with-addons.js function 'update' not defined", "created_utc": 1467806533.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 1}}], "after": "t3_4ri58t", "before": null}}